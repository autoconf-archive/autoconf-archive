#+TITLE: GNU Autoconf Archive NEWS             -*- mode:org;fill-column:79; -*-
#+STARTUP: showall
#
# Copyright (c) 2016 Autoconf Archive Maintainers <autoconf-archive-maintainers@gnu.org>
#
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice
# and this notice are preserved. This file is offered as-is, without any
# warranty.

* Noteworthy changes in release ?.? (????-??-??) [?]

  Obsolete macros AX_CXX_COMPILER_VENDOR, AX_GCC_LIBRARIES_DIR, AX_GCC_VERSION,
  and AX_HAVE_OPENGL have been removed from the archive.

  AX_DEFINE_SUB_PATH has been marked obsolete as suggested in
  https://github.com/peti/autoconf-archive/pull/97.

* Noteworthy changes in release 2016.09.16 (2016-09-16) [stable]

  The following macros were added: AX_BUILD_DATE_EPOCH, AX_CHECK_X86_FEATURES,
  AX_GCC_X86_CPU_SUPPORTS, AX_OPEN62541_CHECK_H, AX_OPEN62541_CHECK_LIB, and
  AX_LUAROCKS_ROCK.

  While updating AX_CODE_COVERAGE, the variable CODE_COVERAGE_LDFLAGS was
  renamed to CODE_COVERAGE_LIBS.

  AX_VALGRIND_CHECK has been extended considerably. In this process. the
  undocumented internal rule check-valgrind-tool was removed.

  It checks if the host cpu supports various instruction set: mmx, sse, popcnt,
  avx, avx2, etc. If the instruction were supported, it would export
  HAVE_XXX_INSTRUCTIONS C preprocessor macros and add the instruction set flag to
  X86_FEATURES_CFLAGS variable. By default it would also set CFLAGS, but this can
  be disabled by the ACTION-IF-FOUND hook.

  AX_WITH_CURSES and AX_WITH_CURSES_* macros have been modernized, in line
  with PKG_CHECK_MODULES's style. This change breaks the interface, but
  makes AX_WITH_CURSES compatible and even completely replaceable with the
  interface of PKG_CHECK_MODULES. Ultimately, these macros should be
  replaced in the future by calls to PKG_CHECK_MODULES. Variables in
  AX_WITH_CURSES have been renamed

    CURSES_LIB -> CURSES_LIBS
    CURSES_CPPFLAGS -> CURSES_CFLAGS

  and for the AX_WITH_CURSES_* macros

    PANEL_LIB -> PANEL_LIBS
    MENU_LIB -> MENU_LIBS
    FORM_LIB -> FORM_LIBS

  such that once the variables have been renamed in configure.ac and Makefile.am,
  the calls AX_WITH_CURSES and PKG_CHECK_MODULES([CURSES], [ncurses]) are
  completely interchangeable.

* Noteworthy changes in release 2016.03.20 (2016-03-20) [stable]

  The following new macros have been added: AX_CHECK_GIRS_GJS,
  AX_CHECK_GIR_SYMBOLS_GJS, AX_CXX_COMPILE_STDCXX, AX_CXX_COMPILE_STDCXX_14,
  AX_CZMQ, AX_FC_CHECK_DEFINE, AX_LIB_NETCDF4, AX_PROG_GJS,
  AX_RESTORE_FLAGS_WITH_PREFIX, AX_SAVE_FLAGS_WITH_PREFIX, AX_VAR_POP,
  AX_VAR_PUSH, and AX_ZMQ.

  Various improvements to the opengl macros. Main features added:
    - Support action-if-found and not-found hook
    - Export HAVE_GL, HAVE_GLU, and HAVE_GLUT preprocessor symbol
    - Add necessary flags to CFLAGS/LIBS by default, but can be disabled by
      overwritting action-if-found hook.
    - Fail the configure script if lib not found. This feature can be disabled
      by overwritting action-if-not-found hook
    - Fix problems on Mac OSX. Been tested on Linux (Ubuntu) and OSX
    - Use --with-xquartz-gl instead of --with-gl=x for using X11 on OSX

  Many new features were added to AX_CODE_COVERAGE and AX_PROG_DOXYGEN.

  AX_CXX_COMPILE_STDCXX now modifies $(CXX) rather than $(CXXFLAGS).

  AX_PTHREAD has been updated significantly. See
  https://savannah.gnu.org/patch/?8186 for further details.

  AX_PYTHON_DEVEL now provides PYTHON_LIBS instead of PYTHON_FLAGS.

  The macros related to C++11 and C++14 were extensively re-factored.

* Noteworthy changes in release 2015.09.25 (2015-09-25) [stable]

  The Archive no longer releases an "lzip"-compressed tarball. The only
  supported format now is "xz". The rationale is that xz so widely supported
  that it seems pointless to archive two release archives on our servers for no
  apparent reason.

  AX_PYTHON_DEVEL changed to provide PYTHON_LIBS, not PYTHON_LDFLAGS. This
  change breaks scripts written with previous versions in mind! The rationale
  is that -L and -l are LIBS arguments, not LDFLAGS arguments. Returning output
  in PYTHON_LDFLAGS suggested wrongly that they should be used in LDFLAGS,
  which can cause the -L and -l arguments to be ignored when they are not in
  the expected position in the list of command line arguments. This is a
  problem, for instance, with the command line generated by AC_LINK_IFELSE.

  AX_CXX_COMPILE_STDCXX_11 now supports Cray's crayCC compiler (CCE 8.4).

  AX_PYTHON, AX_PYTHON_EMBED now support Python 3.4.

  AX_LIB_ORACLE_OCI now supports Oracle 12.

  AX_EXT now supports AVX2/AVX512 and other CPU extensions.

  The new macro AX_GNU_AUTOTEST was added. The macro supports multiple
  test-suites, Makefiles in different locations and many more features.

  AX_CXX_COMPILE_STDCXX_11 now checks for attribute support with C++11 macro.
  Some compilers pass the other tests while not implementing this part of the
  C++11 specification. The test used also does not cause warnings with GCC or
  Clang, and can be used with -Werror.

  The new macro AX_PROG_BISON_VERSION can be used to check for specific
  versions of bison.

  The new macro AX_PROG_FLEX_VERSION can be used to check for specific
  versions of flex.

  AX_APPEND_FLAG no longer fails if the given flag contains a ','.

  AX_LUA now supports Lua 5.3.

  AX_BERKELEY_DB_CXX now supports FreeBSD.

  AX_CXX_COMPILE_STDCXX_11 now support HP aCC.

  AX_PYTHON_MODULE and AX_PYTHON_MODULE_VERSION now support Python 3.

  The new macro AX_PYTHON_MODULE_VERSION has been added.

  AX_LIB_POSTGRESQL provides a new output variable POSTGRESQL_LIBS.

  AX_PATH_GENERIC now supports flags that contain spaces.

  AX_BOOST_BASE now supports native Windows header only libraries.

* Noteworthy changes in release 2015.02.24 (2015-02-24) [stable]

  AX_CHECK_ENABLE_DEBUG now uses $ax_is_release as default for IS-RELEASE.

  AX_IS_RELEASE now supports micro-version policies.

  Portability of AX_CXX_COMPILE_STDCXX_0X has been improved.

  AX_PROG_HAXE_VERSION is a new macro to detect the presence of Haxe
  <http://haxe.org>.

  AX_COMPILER_FLAGS has undergone extensive re-factoring.

  AX_COMPILER_FLAGS_CXXFLAGS is a new macro that tests available C++ compiler
  warnings.

  AX_CXX_COMPILE_STDCXX_11 can now test for SFINAE with template aliases.

  AX_APPEND_FLAG: Fix a regression introduced in the previous release.

* Noteworthy changes in release 2015.02.04 (2015-02-04) [stable]

  AX_OPENMP: Test that we can actually #include <omp.h> successfully.

  AX_COMPILER_FLAGS was re-factored into AX_COMPILER_FLAGS_CFLAGS and
  AX_COMPILER_FLAGS_LDFLAGS.

  AX_CODE_COVERAGE detects gcov program.

  AX_VALGRIND_CHECK now supports running without libtool.

  AX_GCC_VERSION was improved.

  Re-factored and modernized the macros AX_CXX_TEMPLATES, AX_CXX_CONST_CAST,
  AX_CXX_COMPLEX_MATH_IN_NAMESPACE_STD, AX_CXX_BOOL, AX_APPEND_FLAG,
  AX_CHECK_*_FLAG, AX_CHECK_ENABLE_DEBUG, and
  AX_CXX_DEFAULT_TEMPLATE_PARAMETERS.

  AX_CXX_COMPILER_VENDOR was deprecated in favor of AX_COMPILER_VENDOR.

  AX_HAVE_OPENGL was deprecated in favor of AX_CHECK_GL, AX_CHECK_GLU,
  AX_CHECK_GLUT, and AX_CHECK_GLX.

  AX_CHECK_GL has a new parameter --with-mesa that allows choosing the order of
  opengl lib detection.

  Portability of AX_LUA was improved. Support for LUA 5.0 was added.

  New macros AX_IS_RELEASE, AX_COMPILER_FLAGS_GIR, AX_CXX_ERASE_ITERATOR_TYPE,
  AX_COMPILER_VERSION, AX_CHECK_GLX, AX_CHECK_VSCRIPT, AX_VALGRIND_CHECK,
  AX_PKG_CHECK_MODULES, and AX_COMPILER_FLAGS were added.

  AX_PROG_FLEX: Also accept gflex.

  AX_LIB_HDF5: remove extra leading space from include path flag. That space
  creeps into HDF5_CPPFLAGS and breaks the include path flag into two tokens,
  e.g., "-I" and "/usr/include". While this may be legal and doesn't affect the
  compilation, it does break some library tools (e.g., when the macro is used
  in building a dynamic library that uses pkg-config).

  AX_PERL_MODULE_VERSION: use more portable syntax for shell arithmetic.

  AX_JNI_INCLUDE_DIR: support standard Oracle JDK installation layout on Mac OS
  X.

  AX_PROG_JAVAH_BIN_DIR: fix misspelled variable name and follow javah symlink
  to find jni.h.

  AX_BOOST_PYTHON: use unique names for local variables

* Noteworthy changes in release 2014.10.15 (2014-10-15) [stable]

  A brand-new Github mirror of the Archive's Git repository is available at
  <https://github.com/peti/autoconf-archive>. That project allows developers to
  submit patches as Pull Requests instead of having to go through Savannah's
  patch tracker.

  The Archive no longer creates release tarballs compressed with gzip and
  bzip2; only tarballs compressed with xz and lzip are distributed.

  AX_LIB_POSTGRESQL: substitute CPPFLAGS rather than CFLAGS.

  AX_GCC_ARCHFLAG: Rewrite x86 support <https://savannah.gnu.org/patch/?8514>
  and extend Clang support <https://savannah.gnu.org/patch/index.php?8515>.

  AX_GCC_VAR_ATTRIBUTE: support the init_priority attribute.

  AX_PERL_MODULE_VERSION: fix a misspelled variable name. Other unfixed issues
  remain. See <https://savannah.gnu.org/patch/index.php?8507>.

  AX_BOOST_PYTHON: several issue have beeen fixed. Further details can be found
  at <https://savannah.gnu.org/patch/index.php?8540>.

  AX_HAVE_QT: Only check $PATH and qmake for Qt variables. The old logic for
  detecting Qt without $PATH or qmake was never very reliable and the last
  change to this macro broke it entirely. If the Qt variables cannot be found
  via $PATH and qmake, then it would be best to manually define them in the
  makefile.

  AX_TLS: fix quoting problem.

  AX_F90_LIBRARY: several bug fixes and improvements. Further details are at
  <https://savannah.gnu.org/patch/?8500>.

  AX_LUA: fix initialization of ac_cv_header_lua_h. Further details are at
  <https://savannah.gnu.org/patch/?8505>.

  AX_AT_CHECK_PATTERN: executes a test similar to AT_CHECK(), except that
  stdout and stderr are awk regular expressions. Further details can be found
  at <https://savannah.gnu.org/patch/?8492>.

  AX_OPENMP: prevent false negative due to -Wunused-variable.

  AX_COMPILER_VENDOR: improve detection of the CRAY compiler.

  AX_ENABLE_BUILDDIR: support absolute paths.

  AX_HAVE_QT: auto-detect Qt 5 by querying $PATH and qmake. Submitted in
  <https://savannah.gnu.org/patch/index.php?8486>.

  AX_CHECK_ENABLE_DEBUG: add an --enable-debug option which defines an
  ENABLE_DEBUG cpp variable if set. Submitted in
  <https://savannah.gnu.org/patch/index.php?8452>.

  AX_CODE_COVERAGE: new macro which contains all the necessary logic and
  Makefile rules for instrumenting a project with code coverage using lcov.
  Submitted in <https://savannah.gnu.org/patch/index.php?8451>.

  AX_LIB_HDF5: don't overwrite the CPPFLAGS variable. Submitted in
  <https://savannah.gnu.org/patch/index.php?8449>.

  AX_BOOST_BASE: fix for x32 systems. This subject probably needs more
  attention, though. See <https://savannah.gnu.org/patch/index.php?8433>.

  AX_BERKELEY_DB(_CXX): add --with-libdb option so that this macros works on
  OSX with home-brew installed version of BDB. Submitted in
  <https://savannah.gnu.org/patch/index.php?8416>.

  AX_CXX_HAVE_PLACEHOLDERS: check if std::placeholders is defined in
  <functional>. Submitted it <https://savannah.gnu.org/patch/index.php?8414>.

  AX_LIB_HDF5: add support for recognizing HDF5 built with ccache. Submitted in
  <https://savannah.gnu.org/patch/index.php?8450>.

  AX_CC_MAXOPT: Improve CPUID identification patterns as mentioned in
  patch #8514. Add ICC options added in version 11.0 (which deprecates older
  -xX style options). Add support for latest Intel performance processors
  (see #8514 for details). See <https://savannah.gnu.org/patch/index.php?8522>.

  AX_EXECINFO: new macro to test execinfo size type. Submitted in
  <https://savannah.gnu.org/patch/index.php?8525>.

  AX_CXX_VAR_PRETTYFUNC: new macro to determine the function name.

  AX_CC_MAXOPT: default to -O2 for MSVC instead of -O3.

  AX_CXX_HAVE_REFERENCE_WRAPPER, AX_CXX_HAVE_BAD_FUNCTION_CALL,
  AX_CXX_HAVE_BIND, AX_CXX_HAVE_BIT_AND, AX_CXX_HAVE_BIT_OR,
  AX_CXX_HAVE_BIT_XOR, AX_CXX_HAVE_CREF, AX_CXX_HAVE_FUNCTION,
  AX_CXX_HAVE_HASH, AX_CXX_HAVE_IS_BIND_EXPRESSION, AX_CXX_HAVE_IS_PLACEHOLDER,
  AX_CXX_HAVE_MEM_FN, AX_CXX_HAVE_REF: remove dependency on AX_CXX_NAMESPACES.

  AX_BOOST_BASE has been extended to recognize ppc64le as a lib64 architecture.
  Submitted in <https://savannah.gnu.org/patch/index.php?8473>.

  AX_PROG_FLEX has been extended to support OpenBSD.

  AX_COUNT_CPUS has been extended to support Win32 (and Win64). Further
  details are at <http://savannah.gnu.org/patch/index.php?8381>.

* Noteworthy changes in release 2014.02.28 (2014-02-28) [stable]

  AX_PERL_EXT has been extended to report back the installation prefix as
  PERL_EXT_PREFIX.

  AX_EXT has been extended to deal with a situation where
  AX_GCC_X86_CPUID(0x00000001) returns 'unknown'. Further details can be found
  at <http://savannah.gnu.org/patch/?8321>.

  AX_ZONEINFO has improved support for AIX. Further details can be found at
  <http://savannah.gnu.org/patch/?8313>.

  The set of search paths checked by AX_LUA has been extended, mostly in an
  effort to support FreeBSD and OpenBSD: <http://savannah.gnu.org/patch/?8318>
  and <http://savannah.gnu.org/patch/?8355> have further details.

  The new macros AX_CXX_HAVE_BAD_FUNCTION_CALL, AX_CXX_HAVE_BIND,
  AX_CXX_HAVE_BIT_AND, AX_CXX_HAVE_BIT_OR, AX_CXX_HAVE_BIT_XOR,
  AX_CXX_HAVE_CREF, AX_CXX_HAVE_FUNCTION, AX_CXX_HAVE_HASH,
  AX_CXX_HAVE_IS_BIND_EXPRESSION, AX_CXX_HAVE_IS_PLACEHOLDER,
  AX_CXX_HAVE_MEM_FN, AX_CXX_HAVE_REF, and AX_CXX_HAVE_REFERENCE_WRAPPER have
  been added.

  M4sugar and M4sh added to AX_PROG_JAR, AX_PROG_JAVA, AX_PROG_JAVAC, and
  AX_PROG_JAVADOC. Also fixed a path discrepancy with AX_JAVA_OPTIONS. See
  <http://savannah.gnu.org/patch/index.php?8279> for further details.

  The "mandatory" option in AX_CXX_COMPILE_STDCXX_11 has been fixed, and
  support for Gentoo's hardened GCC has been improved. Further details are at
  <http://savannah.gnu.org/patch/index.php?8287>.

  Three new macros were submitted in <http://savannah.gnu.org/patch/?8260>:

   - AX_GCC_BUILTIN is used to detect GCC-compatible built-in functions (e.g.
     AX_GCC_BUILTIN([__builtin_expect]) to check for __builtin_expect()).

   - AX_GCC_FUNC_ATTRIBUTE used to detect GCC-compatible function attributes
     (e.g. AX_GCC_FUNC_ATTRIBUTE([pure]) to check for _attribute_((pure))).

   - AX_GCC_VAR_ATTRIBUTE is used to detect GCC-compatible variable attributes
     (e.g. AX_GCC_VAR_ATTRIBUTE([unused]) to check for _attribute_((unused))).

  AX_BOOST_BASE has been updated to recognize the new multi-arch system paths
  on Ubuntu 13.10 x86_64. See <http://savannah.gnu.org/patch/?8254> for further
  details.

  Fixed a cut-and-paste error in AX_CREATE_PKGCONFIG_INFO. Further details are
  available at <http://savannah.gnu.org/patch/?8238>.

  Extended AX_CHECK_{PREPROC,COMPILE,LINK}_FLAG macros to accept an additional
  "input" argument. See <http://savannah.gnu.org/patch/?8247> for further
  details.

  Fix recognition of UltraSparc IIi in AX_GCC_ARCHFLAG. Further details can be
  found at <http://savannah.gnu.org/patch/?8235>.

* Noteworthy changes in release 2013.11.01 (2013-11-01) [stable]

  AX_PROG_CXX_MPI has been updated to recognize an MPI C++ compiler. Further
  details are at <http://savannah.gnu.org/patch/?8218>.

  The new macro AX_AM_OVERRIDE_VAR allows "overriding" of user provided
  variables for Automake. See <http://savannah.gnu.org/patch/?8213> for further
  details.

  AX_COMPILER_VENDOR has been extended to support detection of Fujitsu
  compilers. See <http://savannah.gnu.org/patch/index.php?8212> for further
  details.

  AX_TRY_RUN_JAVA and AX_TRY_COMPILE_JAVA has been made more picky about what
  they delete. See <http://savannah.gnu.org/patch/index.php?8211> for further
  details.

  The new macro AX_PROG_SCALA checks that scala is available. Further details
  are available at <http://savannah.gnu.org/patch/index.php?8198>.

  The new macro AX_FIND_SCALA_STDLIB add support for finding the jar containing
  the Scala Standard Library. See <http://savannah.gnu.org/patch/?8197> for
  further details.

  The new macro AX_PROG_SCALAC provides support for finding a Scala compiler.
  See <http://savannah.gnu.org/patch/index.php?8195> for further details.

  The new macres AX_FIND_HAMCREST and AX_FIND_JUNIT have been added, which
  provide support for finding the jars of JUnit and Hamcrest. Please refer to
  <http://savannah.gnu.org/patch/index.php?8196> for further details.

  AX_PTHREAD has been extended to support Clang. Further details can be found
  at <http://savannah.gnu.org/patch/?8186>.

  The macros AX_GCC_LIBRARIES_DIR and AX_GCC_VERSION have been marked obsolete
  because they depend on the obsolete AX_GCC_OPTION macro. Further details can
  be found at <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2013-09/msg00000.html>.

  New macros AX_BOOST_CONTEXT, AX_BOOST_COROUTINE, AX_BOOST_LOG, AND
  AX_BOOST_LOG_SETUP have been added to detect Boost.Log and Boost.Coroutine.

  AX_PROG_PERL_VERSION has been extended to recognize recent versions of Perl.
  See <http://savannah.gnu.org/patch/?8144> for further details.

  AX_JNI_INCLUDE_DIR now recognizes the $JAVA_HOME environment variable when
  trying to locate the Java SDK. See <http://savannah.gnu.org/patch/?8155> for
  further details.

  AX_EXT has been extended to recognize cases where a CPU supports AVX, but the
  operating system does not. See <http://savannah.gnu.org/patch/?8084> for
  further details.

  Support for 64-bit FreeBSD has been improved in AX_EXT, AX_GCC_ARCHFLAG. See
  <http://savannah.gnu.org/patch/?8085> for further details.

  AX_BOOST_BASE has been extended to recognize aarch64 as a lib64 architecture.

  A bug in AX_LIB_HDF5 has been fixed that would result in $CC not being
  restored properly after testing.

* Noteworthy changes in release 2013.06.09 (2013-06-09) [stable]

  AX_PROG_FLEX has been updated to be more liberal about the name of the flex
  executable.

  AX_LIB_HDF5 has been updated to support the variables HDF5_CC, HDF5_FC, and
  HDF5_LIBS. See <http://savannah.gnu.org/patch/?8026> for further details.

  AX_XSDCXX has been added; a macro to find the CodeSynthesis XSD executable
  and the corresponding headers. See <http://savannah.gnu.org/patch/?8011>
  for further details.

  AX_PYTHON_DEVEL no longer overrides LOCALMODLIBS. Further details are
  available at <http://savannah.gnu.org/patch/index.php?8065>.

  The portability of AX_ZONEINFO has been improved. Further details can be
  found at <http://savannah.gnu.org/patch/index.php?8029>.

  The configure flags generated by AX_ENABLE_DEFAULT_ACLOCALDIR have been
  fixed.

  AX_CHECK_GLU and AX_CHECK_GLUT have been added again by a new maintainer.

* Noteworthy changes in release 2013.04.06 (2013-04-06) [stable]

  AX_PROG_CC_FOR_BUILD and AX_PROG_CXX_FOR_BUILD have been simplified to
  require only AC_CANONICAL_HOST instead of AC_CANONICAL_SYSTEM. Further
  details are available at <http://savannah.gnu.org/patch/?7989>.

  A substantially updated version of the formerly obsoleted AX_CHECK_GL macro
  has been added again in <http://savannah.gnu.org/patch/?7986>.

  The new macro AX_LIB_SAMTOOLS has been added to check for Samtools
  <http://samtools.sourceforge.net/>. See <http://savannah.gnu.org/patch/?7983>
  for further details.

  The new macro AX_LIB_TABIX has been added to check for Tabix
  <http://samtools.sourceforge.net/tabix.shtml>. Further details are available
  at <http://savannah.gnu.org/patch/?7984>.

  AX_CXX_COMPILE_STDCXX_11 has been extended to test for the "auto" keyword.
  Further details can be found at <http://savannah.gnu.org/patch/?7985>.

  Support for AIX has been improved in AX_PTHREAD. Further details are
  available at <http://savannah.gnu.org/patch/?7973>.

  AX_PYTHON_DEVEL's ability to detect the proper suffix for shared libraries
  has been improved. See <http://savannah.gnu.org/patch/?7953> for further
  details.

  AX_BOOST_PYTHON has been switched to AX_PYTHON_DEVEL. Further details are
  available at <http://savannah.gnu.org/patch/?7979> and at
  <http://savannah.gnu.org/patch/?7980>.

  Fixed AX_LIB_EXPAT not to overwrite $LIBS. Furthermore, linker flags are now
  returned in $EXPAT_LDFLAGS instead of $EXPAT_LIBS. Further details are
  available at <http://savannah.gnu.org/patch/?7968>.

  AX_PYTHON has been updated to use the "distutils" module to find Python's
  header files instead of depending on the "locate" command. Further details
  are at <http://savannah.gnu.org/patch/?7966>.

  AX_PYTHON_DEVEL has been extended to support ubuntu 13.04. See
  <http://savannah.gnu.org/patch/?7965> for further details.

  Incorrect CPU detection in AX_GCC_ARCHFLAG has been fixed. See
  <http://savannah.gnu.org/patch/?7978> for further details.

  AX_EXT has been extended to recognize AVX SIMD instructions.

  A release tarball was added that is compressed with the free lzip utility.

  AX_JNI_INCLUDE_DIR has been extended to support FreeBSD.

  AX_PYTHON has been extended to support ArchLinux. See
  <http://savannah.gnu.org/patch/?7951> for further details.

  AX_PYTHON_DEVEL has been extended to support ArchLinux. See
  <http://savannah.gnu.org/patch/?7953> for further details.

  A minor bug in AX_BOOST_ASIO has been fixed. Further details are at
  <http://savannah.gnu.org/patch/index.php?7959>.

* Noteworthy changes in release 2013.02.02 (2013-02-02) [stable]

  Support for AIX has been improved in AX_PTHREAD. Further details are
  available at <http://savannah.gnu.org/patch/index.php?7911>.

  AX_BOOST_FILESYSTEM has been improved to work more reliable on non-GNU
  systems. See <http://savannah.gnu.org/patch/?7921> for further details.

  The new macro AX_LIB_EV has been added, which checks for libev in a
  pkg-config-like manner. The purpose of the macro is to unifty behaviour
  between distros that come with libev.pc and systems (e.g. upstream) that
  don't. Further details are at <http://savannah.gnu.org/patch/?7938>.

  The portability of AX_PYTHON has been improved. Also, the macro now
  recognizes more recent versions of the Python interpreter, too. See
  <http://savannah.gnu.org/patch/?7897> for further details.

  Support for cross-compilation in AX_PROG_CC_FOR_BUILD has been improved.
  See <http://savannah.gnu.org/patch/index.php?7890> for further details.

  The new macro AX_PROG_CXX_FOR_BUILD has been added. Further details are
  available at <http://savannah.gnu.org/patch/?7891>.

  Mac OS X support in AX_OPENMP has been improved. Further details are
  available at <http://savannah.gnu.org/patch/?7893>.

* Noteworthy changes in release 2012.11.14 (2012-11-14) [stable]

  The portability of AX_BOOST_SYSTEM and AX_BOOST_THREAD has been improved. See
  <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2012-09/msg00026.html>
  for further details.

  AX_COUNT_CPUS has been cleaned up. See <http://savannah.gnu.org/patch/?7860>
  for further details.

* Noteworthy changes in release 2012.09.08 (2012-09-08) [stable]

  AX_BLAS has been extended to detect the Intel Math Kernel Library (MKL). See
  <http://savannah.gnu.org/patch/?7807> for further details.

  Several bugs and inconsistencies in AX_TRY_RUN_JAVA, AX_PROG_JAVA_WORKS,
  AX_CHECK_CLASS, and AX_PROG_JAVA have been fixed. See
  <http://savannah.gnu.org/patch/?7835> for further details.

  AX_INCLUDE_STRCASECMP has been added. The macro detects which header file
  defines the strcasecmp() function. See <http://savannah.gnu.org/patch/?7836>
  for further details.

  AX_LIB_ORACLE_OCCI has been added. The macro detects the availability of the
  Oracle OCCI API of particular version or newer. Further details can be found
  at <http://savannah.gnu.org/patch/?7834>.

  AX_CHECK_POSTGRES_DB has been substantially re-written. The default behavior
  is unchanged, but there are two new (optional) arguments ACTION-IF-FOUND and
  ACTION-IF-NOT-FOUND. See <http://savannah.gnu.org/patch/?7832> for further
  details.

  AX_CXX_RVALUE_REFERENCES has been added. See
  <http://savannah.gnu.org/patch/?7833> for further details.

  AX_BLAS has been extended to support for the (free-software, BSD-licensed)
  OpenBLAS library, a descendant of GotoBLAS
  <http://xianyi.github.com/OpenBLAS/>. See
  <http://savannah.gnu.org/patch/?7828> for further details.

  The reliability of AX_BOOST_SYSTEM and AX_BOOST_FILESYSTEM has been improved.
  See <http://savannah.gnu.org/patch/?7816> for further details.

  The new entry AX_ZONEINFO has been added. Further details are available at
  <http://savannah.gnu.org/patch/index.php?7814>.

  AX_CHECK_ZLIB has been updated significantly:

   - The behavior was changed so that the macro proceeds to compile and link
     tests even if zlib.h was not found in the "usual locations".

   - The macro interface has been extend to the typical ([action-if-found],
     [action-if-not-found])-style.

   - Previous versions used to search zlib in "usual locations" only if
     --with-zlib was provided [by user]. Now, the macro performs that search in
     default mode, too.

  See <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2012-07/msg00005.html>
  for further details.

  The new macro AX_PRINTF_SIZE_T has been added which can be used to check for
  the appropriate printf() format string modifier to use with a size_t
  argument. See <http://savannah.gnu.org/patch/?7787> for further details.

  A bug has been fixed in the Intel MKL library test of AX_BLAS. See
  <http://savannah.gnu.org/patch/?7770> for further details.

  AX_BOOST_SERIALIZATION has been improved to support for MacOS/BSD sed.
  Further details can be found at <http://savannah.gnu.org/patch/?7768>.

* Noteworthy changes in release 2012.04.07 (2012-04-07) [stable]

  The macro AX_CXX_COMPILE_STDCXX_11 has been added, which determines the
  compiler switches that need to be added to be passed in order to enable C++11
  support in the compiler. See <http://savannah.gnu.org/patch/?7735> for
  further details.

  The new macro AX_CXX_DELETE_METHOD has been added which checks whether the
  C++11 '= delete' syntax for suppressing undesired implicit methods is
  supported. Further details are at <http://savannah.gnu.org/patch/?7735>.

  The macros AX_BOOST_CHRONO and AX_BOOST_LOCALE have been added which detect
  the Boost.Chrono and Boost.Locale library respectively. Further details are
  at <http://savannah.gnu.org/patch/?7721> and
  <http://savannah.gnu.org/patch/?7743>.

  Support for automatic detection of dynamic libraries on Mac OS X (*.dylib)
  has been improved in all Boost macros. <http://savannah.gnu.org/patch/?7719>
  has further details.

  Portability of AX_CHECK_LIBRARY has been improved so that the macro can be
  used with Autoconf versions prior to 2.64.

  AX_GCC_ARCHFLAG has been extended to support new Intel/AMD CPUs. See
  <http://savannah.gnu.org/patch/?7707> for further details.

  An endless recursion-bug in AX_COUNT_CPUS has been fixed. See
  <http://savannah.gnu.org/patch/?7697> for further details.

  AX_LUA_LIBS has been fixed to work with Lua 5.2.

* Noteworthy changes in release 2011.12.21 (2011-12-21) [stable]

  Error reporting in AX_BERKELEY_DB_CXX has been improved in the case the macro
  is called without LANG=C++. See <http://savannah.gnu.org/patch/?7674> for
  further details.

  Solaris support in AX_PTHREAD has been improved. Further details are
  available at <http://savannah.gnu.org/patch/?7666>.

  Under-quoted use of $CPPFLAGS has been fixed in AX_BOOST_PYTHON. See
  <http://savannah.gnu.org/patch/?7673> for further details.

  The list of headers required by C++11 (the standard formerly known as C++0x)
  has been updated in AX_CXX_HEADER_STDCXX_0X. Further details are available at
  <http://savannah.gnu.org/patch/index.php?7664>.

  A bug in AX_WITH_CURSES has been fixed that prevented CURSES_LIB from being
  used. See <http://savannah.gnu.org/patch/index.php?7651> for further details.

  The compiler tests in AX_EXT have been fixed, and support for detection of
  SSE4.1, SSE4.2, AVX extensions has been added. See
  <http://savannah.gnu.org/patch/?7633> for further details.

  The new macro AX_LIB_GDAL has been added which tests the availability of the
  GDAL/OGR library. Further details are available at
  <http://savannah.gnu.org/patch/?7639>.

  Fixed Darwin support in AX_ENABLE_BUILDDIR. Further details are available at
  <http://savannah.gnu.org/patch/?7619>.

  The obsolete macros AX_C_CHECK_FLAG, AX_CFLAGS_GCC_OPTION,
  AX_CHECK_COMPILER_FLAGS, AX_CHECK_GL, AX_CHECK_GLU, AX_CHECK_GLUT,
  AX_CHECK_LINKER_FLAGS, AX_CHECK_SUNPRO_C, AX_CPP_CHECK_FLAG,
  AX_CXX_CHECK_FLAG, AX_CXXCPP_CHECK_FLAG, AX_DEFINE_DIR, AX_FUNC_FORK,
  AX_GCC_INSTALL_DIR, AX_GXX_VERSION, AX_LANG_COMPILER_MS, AX_LD_CHECK_FLAG,
  and AX_SNPRINTF_OFLOW have been dropped from the distribution.

* Noteworthy changes in release 2011.09.17 (2011-09-17) [stable]

  AX_LIB_MYSQLCPPCONN has been added, a macro that tests for the MySQL
  Connector/C++ libraries. See <http://savannah.gnu.org/patch/index.php?7609>
  for further details.

  AX_LIB_TRACE has been added, a macro that tests for the libtrace libraries.
  See <http://savannah.gnu.org/patch/?7608> for further details.

  AX_FUNC_FORK and AX_SNPRINTF_OFLOW have been marked obsolete, because there
  are superior alternatives.

  AX_DEFINE_DIR has been marked obsolete because its design does not comply
  with the GNU Coding Standards.

  Modified AX_LIB_SQLITE3 to find the library using the C instead of the C++
  compiler. See <http://savannah.gnu.org/patch/?7601> for further details.

  AX_CHECK_GL, AX_CHECK_GLU, AX_CHECK_GLUT have been marked obsolete. The
  author of these macros prefers to publish them on his own website at
  <http://code.google.com/p/autoconf-gl-macros/>.

  AX_CHECK_MYSQL has been significantly re-factored to fix several bugs. See
  <http://savannah.gnu.org/patch/?7599> for further details.

  New additions AX_PERL_EXT and AX_RUBY_EXT can be used to fetch the linker
  flags and C compiler flags for compiling and linking Perl/Ruby binary
  extensions.

  AX_LIB_HDF5 erroneously defined HAVE_HDF5 even when the library was not
  detected. This has been fixed.

  Autoconf 2.68 warnings concerning AX_PTHREAD haven been fixed.

  AX_WITH_CURSES has been extensively re-written, and the new variants
  AX_WITH_CURSES_PANEL, AX_WITH_CURSES_MENU, and AX_WITH_CURSES_FORM have been
  added. See <http://savannah.gnu.org/patch/?7587> for further details.

  AX_GCC_INSTALL_DIR, AX_GCC_LIBRARIES_DIR, AX_GCC_VERSION, and AX_GXX_VERSION
  are non-functional and have been marked obsolete, because they depend on the
  obsolete AX_GCC_OPTION macro, which has been removed from the archive.

* Noteworthy changes in release 2011.07.17 (2011-07-17) [stable]

  A cut-and-paste error in AX_BOOST_FILESSYTEM has been fixed. See
  <http://savannah.gnu.org/patch/?7576> for further details.

  The macros AX_CHECK_SUNPRO_C and AX_LANG_COMPILER_MS are deprecated in favor
  of the more generic AX_COMPILER_VENDOR.

  Several instance of under-quoted arguments have been fixed in
  AX_CHECK_OPENSSL. See <http://savannah.gnu.org/patch/?7571> for further
  details.

  The new macros AX_CHECK_PREPROC_FLAG, AX_CHECK_COMPILE_FLAG, and
  AX_CHECK_LINK_FLAG have been added. They are intended to replace
  AX_CHECK_COMPILER_FLAGS, AX_CHECK_LINKER_FLAGS, AX_C_CHECK_FLAG,
  AX_CPP_CHECK_FLAG, AX_CXX_CHECK_FLAG, AX_CXXCPP_CHECK_FLAG and
  AX_LD_CHECK_FLAG. Consequently, the older macros have been marked obsolete,
  and they'll be removed from the archive in the foreseeable future.
  Further details can be found at
  <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2011-06/msg00017.html>.

  The new macro AX_APPEND_FLAG, to append a flag to a FLAGS variable, has been
  added.  The convenience wrappers AX_APPEND_COMPILE_FLAGS and
  AX_APPEND_LINK_FLAGS have been added. Those two macros add the given flags
  only if the compiler/linker understands them.

  The obsolete macros AX_CFLAGS_WARN_ALL_ANSI, AX_C_IFDEF, AX_C_PRINTF_THSEP,
  AX_GCC_OPTION, AX_WITH_GUILE, AX_WITH_PERL, AX_WITH_PYTHON, and AX_WITH_RUBY
  have been deleted.

  The new macro AX_CHECK_MYSQL has been added. It is geared specifically toward
  MySQL plugin development. See <http://savannah.gnu.org/patch/?7553> for
  further details.

  AX_PTHREAD has been extended to check for PTHREAD_PRIO_INHERIT. See
  <http://savannah.gnu.org/patch/?7552> for further details.

  Several several bugs in AX_CHECK_DEFINE have been fixed. See
  <http://savannah.gnu.org/patch/?7551> for further details.

  The new macros AX_PROG_CC_MPI, AX_PROG_CXX_MPI, AX_PROG_F77_MPI, and
  AX_PROG_FC_MPI address several shortcomings found in AX_MPI. Further details
  can be found at
  <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2011-05/msg00004.html>,
  <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2011-06/msg00003.html>.

  AX_BOOST_THREAD: Two bugs have been fixed that prevented the macro from being
  used in cross-compilation environments for Windows on Unix.

  AX_VAR_TIMEZONE_EXTERNALS, AX_FUNC_WHICH_GETHOSTBYNAME_R, and AX_PTHREAD have
  been updated to conform with Autoconf 2.68

* Noteworthy changes in release 2011.04.12 (2011-04-12) [stable]

  AX_LUA has been improved to work correctly with LuaJIT.

  Changed AX_HAVE_QT to list libraries last, not first. Other previously used
  ordering will fail when --as-needed is in effect. See
  <http://savannah.gnu.org/patch/?7514> for further details.

* Noteworthy changes in release 2011.03.17 (2011-03-17) [stable]

  AX_PATH_GENERIC has been extended to allow setting LIBRARY_LIBS and
  LIBRARY_CFLAGS variables on configure command line or in the environment to
  override the normal values returned by `library-config --libs` and `--cflags`
  respectively. See <http://savannah.gnu.org/patch/?7490> for further details.

  AX_LIB_EXPAT has been modified to save the found library in EXPAT_LIBS
  instead if EXPAT_LDFLAGS. This is necessary to avoid build failures when
  linking with --as-needed. See <http://savannah.gnu.org/patch/?7489> for
  further details.

  AX_PKG_SWIG has been extended to find SWIG v2 as installed by Ubuntu Maverick
  and Ubuntu Natty.

  AX_PROG_SPLINT has been added. The macro provides Automake support for the
  splint utility. See <http://savannah.gnu.org/patch/?7453> for further
  details.

  Fixed a regression in AX_EXT_HAVE_LIB.

  The new macro AX_BERKELEY_DB_CXX has been added. It is a variant of
  AX_BERKELEY_DB that has been adapted to check for C++ headers and libraries.
  See <http://savannah.gnu.org/patch/?7446> for further details.

* Noteworthy changes in release 2011.01.02 (2011-01-02) [stable]

  AX_BOOST_BASE has been extended to support non-x86 64-bit architectures, such
  as PPC64 or Sparc64, too. See <http://savannah.gnu.org/patch/?7428> for
  further details.

  AX_CHECK_ZLIB has been bug-fixed to honor the --with-zlib option. Further
  details are available at <http://savannah.gnu.org/patch/?7411>.

  AX_CHECK_JAVA_HOME has been extended to deal correctly with MacOS X. See
  <http://savannah.gnu.org/patch/?7408> for further details.

  The robustness of AX_PROG_FLEX and AX_PROG_BISON has been improved. See
  <http://savannah.gnu.org/patch/?7405> for further details.

  A bug in AX_EXT_HAVE_LIB has been fixed that prevented the macro from being
  called several times. See <http://savannah.gnu.org/patch/?7403> for further
  details.

  The new macro AX_CXX_RESTRICT_THIS has been added. It's purpose is to
  determine whether the C++ compiler supports qualifying a member function with
  a restricted "this" pointer. See <http://savannah.gnu.org/patch/?7397> for
  further details.

  AX_CXX_COMPILE_STDCXX_0X has been improved to support GCC 4.5.x. Please refer
  to <http://savannah.gnu.org/patch/?7387> for further details.

  The macro AX_GCC_OPTION has been marked obsolete and will be deleted from the
  archive in the foreseeable future. Its functionality is now provided by
  AX_C_CHECK_FLAG, AX_CXX_CHECK_FLAG, AX_CPP_CHECK_FLAG, AX_CXXCPP_CHECK_FLAG,
  and AX_LD_CHECK_FLAG.

  The license of the following macros has been updated from GPLv2 (with
  Autoconf exception) to GPLv3 (with Autoconf exception):
  AX_ARG_WITH_PATH_STYLE, AX_C_BIGENDIAN_CROSS, AX_C_DECLARE_BLOCK,
  AX_CFLAGS_AIX_OPTION, AX_CFLAGS_FORCE_C89, AX_CFLAGS_GCC_OPTION,
  AX_CFLAGS_HPUX_OPTION, AX_CFLAGS_IRIX_OPTION, AX_CFLAGS_NO_WRITABLE_STRINGS,
  AX_CFLAGS_STRICT_PROTOTYPES, AX_CFLAGS_SUN_OPTION, AX_CFLAGS_WARN_ALL_ANSI,
  AX_CHECK_ALIGNED_ACCESS_REQUIRED, AX_CHECK_DEFINE, AX_CHECK_FUNC_IN,
  AX_CHECK_SYMBOL, AX_CHECK_TYPEDEF, AX_COND_WITH_LEVEL, AX_CONFIGURE_ARGS,
  AX_CREATE_GENERIC_CONFIG, AX_CREATE_STDINT_H, AX_CREATE_TARGET_H,
  AX_DEFINE_SUB_PATH, AX_DIRNAME, AX_ENABLE_BUILDDIR, AX_EXPAND_PREFIX,
  AX_GCC_CONST_CALL, AX_GCC_MALLOC_CALL, AX_GCC_WARN_UNUSED_RESULT,
  AX_MAINTAINER_MODE_AUTO_SILENT, AX_NOT_ENABLE_FRAME_POINTER,
  AX_NUMERIC_NAMEDLEVEL, AX_PATCH_LIBTOOL_CHANGING_CMDS_IFS, AX_PATH_LIB_PCRE,
  AX_PREFIG_CONFIG_H, AX_PROG_CC_CHAR_SUBSCRIPTS, AX_PROG_CP_S,
  AX_SET_DEFAULT_PATHS_SYSTEM, AX_SPEC_FILE, AX_SPEC_PACKAGE_VERSION,
  AX_SUBDIR_FILES, AX_SUBST_WITH, AX_SYS_LARGEFILE_SENSITIVE,
  AX_WARNING_DEFAULT_ACLOCALDIR, and AX_WARNING_DEFAULT_PKGCONFIG.

  The macros AX_CXX_CPPFLAGS_STD_LANG, AX_CXX_CXXFLAGS_STD_LANG and
  AX_CXX_LDFLAGS_STD_LANG have been modified to use AX_COMPILER_VENDOR
  for compiler detection.

  The new macro AX_ASM_INLINE has been added. It's purpose is to determine
  whether the C compiler supports in-line assembler instructions.

  The new macro AX_FORCEINLINE has been added. It's purpose is to determine
  whether the C compiler supports forced in-lining.

  The new macro AX_LIB_CGAL_CORE has been added. Further details are available
  at <http://savannah.gnu.org/patch/?7370>.

  The new macro AX_CHECK_LIBRARY has been added. Further details are available
  at <http://savannah.gnu.org/patch/?7363>.

  AX_JNI_INCLUDE_DIR has been fixed to work correctly on MacOS X 10.6.4, where
  the header <jni.h> is a symbolic link. Further details are available at
  <http://savannah.gnu.org/patch/?7360>.

* Noteworthy changes in release 2010.10.26 (2010-10-26) [stable]

  The macros AX_WITH_GUILE, AX_WITH_PERL, AX_WITH_PYTHON, and AX_WITH_RUBY are
  considered obsolete and will be deleted from the archive in the foreseeable
  future. Use of obsolete macros can be identified by running autoconf(1) with
  the flag -Wobsolete. Furthermore, the standard utility autoupdate(1) provides
  assistance with updating existing "configure.ac" files.

  AX_PROG_DOXYGEN has been extended to implement "DX_DOT_FEATURE(ON|OFF)". This
  feature was documented, but it didn't actually exist. Further details are
  available at <http://savannah.gnu.org/patch/?7340>.

  A bug in AX_BOOST_BASE has been fixed that would cause BOOST_LDFLAGS to be
  detected incorrectly. See <http://savannah.gnu.org/patch/?7337> for further
  details.

  AX_LIB_HDF5 has been extended to support requesting either a serial or a
  parallel HDF5 installation. Furthermore, the macro can now detect whether or
  not a Fortran-ready installation is present. Further details are available at
  <http://savannah.gnu.org/patch/?7338>.

  AX_CFLAGS_WARN_ALL has been cleaned up to avoid use of obsolete Autoconf
  constructs. Also, a new variant of the macro, AX_FCFLAGS_WARN_ALL, has been
  added to enable support for Fortran. Further details are available at
  <http://savannah.gnu.org/patch/?7335>.

  AX_COMPILER_VENDOR has been extended to support the Clang compiler.

  Caching issues in AX_BLAS have been remedied. Further details are available
  at <http://savannah.gnu.org/patch/?7320>.

  Plenty of Autoconf 2.68 warnings have been fixed.

  Added initial version of AX_CC_FOR_BUILD.

  AX_LUA_LIB_VERSION has been renamed to AX_LUA_HEADERS_VERSION, because that
  is what the macro is checking, really. A new macro AX_LUA_READLINE has been
  added.

  The AX_PREFIX_CONFIG_H macro has been improved to support the system shell
  "dash". See <http://savannah.gnu.org/patch/?7317> for further details.

  The AX_BLAS_F77_FUNC macro has been improved to properly save and restore the
  value of the $LIBS variable. Furthermore, an extra check was added to verify
  that the integer size of Fortran (4 or 8 bytes) matches that of BLAS. See
  <http://savannah.gnu.org/patch/?7311> for further details.

  AX_TLS has been updated to usual FOUND/NOT-FOUND interface.

  Handling of indirectly named shell variables has been fixed in
  AX_CFLAGS_GCC_OPTION. There have also been improvements to the
  documentation. See <http://savannah.gnu.org/patch/?7291> and
  <http://savannah.gnu.org/patch/?7292> for further details.

* Noteworthy changes in release 2010.08.19 (2010-08-19) [stable]

  64-bit support in the boost macros has been improved. Further details are at:
  <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2010-08/msg00008.html>.

  A test logic error in AX_LIB_MYSQL has been fixed. Further details are at
  <http://savannah.gnu.org/patch/?7285>.

  The boost macros for iostreams, regex, serialization, signals, system,
  test_exec_monitor, unit_test_framework, wave, and wserialization have been
  patched not to rely on being executed by a 'bash' shell. Also, an
  under-quoted shell variable has been fixed in AX_BOOST_BASE.

  The documentation of AX_MPI has been improved. Further details are at
  <http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2010-08/msg00000.html>.

* Noteworthy changes in release 2010.07.06 (2010-07-06) [stable]

  Fixed compiler warning in AX_PTHREAD's test program for AC_TRY_LINK.

* Noteworthy changes in release 2010.06.04 (2010-06-04) [beta]

  The Autoconf Archive has been declared an official GNU project. Consequently,
  the web site has moved from <http://www.nongnu.org/autoconf-archive/> to
  <https://www.gnu.org/software/autoconf-archive/>. Old addresses remain valid
  for the foreseeable future, though.

  AX_BOOST_DATE_TIME and AX_BOOST_FILESYSTEM have been patched to function
  correctly on systems that use "dash" as the system shell (i.e. Debian).

  AX_PTHREAD has been fixed to provide the "-pthreads" flag on 10.6 OS X
  systems.

  Fixed use of $EXEEXT in AX_CHECK_JAVA_HOME, AX_PROG_JAVA, AX_PROG_JAVA_WORKS,
  AX_PROG_JAVAC, and AX_PROG_JAVADOC. Further details can be found at
  <http://savannah.gnu.org/patch/?6948>.

  AX_LIB_LIBKML, a macro to detect Google's libkml library, has been added. See
  http://savannah.gnu.org/patch/?7109 for further details.

  AX_PREFIX_CONFIG_H has been bug-fixed to avoid generating extraneous spaces
  that would break prefixed macros.

  AX_F90_MODULE_FLAG has been bug-fixed with regard to the Compaq Alpha Fortran
  compiler.

  A typo in the code of AX_PYTHON_EMBED has been fixed that resulted in the
  function AX_PYTHON_INSIST being undefined.

  The new AX_LIB_HDF5 macro provides functionality to detect the HDF5 library.

  The version detection code in AX_PKG_SWIG has been fixed. Previous versions
  of this macro would fail to accept SWIG 2.0 where SWIG >= 1.3.x was requested.

* Noteworthy changes in release 2010.02.14 (2010-02-14) [beta]

  All macros have been assigned a unique serial number that corresponds to the
  number of commits that have modified the macro in the Archive's Git
  repository. Refer to the [[https://www.gnu.org/software/libtool//manual/automake/Serials.html][Automake documentation on serial numbers]] for further
  details about why these numbers are useful.

  The text of the all-permissive license has been augmented by an express
  warranty disclaimer as [[https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html][suggested by the Free Software Foundation]].

  AX_CXX_VERBOSE_TERMINATE_HANDLER has been generalized to support
  architectures other than GNU libstdc++.

  AX_CHECK_ICU has been extended to support icu-specific CPPFLAGS.

  AX_BOOST_BASE has been improved to work correctly in a cross-compilation
  environment and extended to support an
  ACTION-IF-FOUND/ACTION-IF-NOT-FOUND-style API.

  AX_PTHREAD has been updated to succeed when compiling with -Wall and -Werror.

  AX_C_IFDEF has been deprecated, because the standard Autoconf macro
  AC_CHECK_DECL provides the same functionality.

  AX_C_PRINTF_THSEP has been deprecated because of technical flaws. See
  http://savannah.nongnu.org/patch/?6848 for further details.

  AX_RESTORE_FLAGS and AX_SAVE_FLAGS have been added.

  AX_SYS_LARGEFILE_SENSITIVE has improved support for x86_64 hosts.

  AX_MPIP has been added.

  In all macros, calls to the obsolete AC_HELP_STRING function have been
  replaced with the newer, recommended AS_HELP_STRING.

* Noteworthy changes in release 2009.12.16 (2009-12-16) [alpha]

  All macros that used a prefix other than AX_ -- or no prefix at all -- have
  been renamed to use AX_ consistently. The new version forward old calls under
  their old names to the new ones via Autoconf's AU_ALIAS mechanism.

  The HTML documentation is obsolete. Instead, the archive now ships its
  documentation in Texinfo format.

  All macros distributed by the archive are now licensed under terms that do
  *not* limit the choice of license for the generated configure script.
  Previous releases didn't meet this requirement because they contained macros
  that were licensed under GPL or Lesser GPL without an Autoconf Exception.

  Please refer to the [[ChangeLog]] file for a complete list of changes.

* Noteworthy changes in release 2009.07.31 (2009-07-31) [alpha]

  The archive has moved to Savannah: http://www.nongnu.org/autoconf-archive/
  Version 2009-04-26 was the last to be released at autoconf-archive.cryp.to.

  The version identifier has been changed to a "year.month.day" spelling,
  rather than the ISO format, because the dot-separated spelling works better
  for most distributions and for the gnulib infrastructure.

  The 2009.07.31 release was an internal test release that has never been
  publicly available.
